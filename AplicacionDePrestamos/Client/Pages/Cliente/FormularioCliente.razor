@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@page "/cliente/crearcliente"
<h3>FormularioCliente</h3>

<EditForm Model="cliente" OnInvalidSubmit="@Crear">
    <DataAnnotationsValidator/>
    
        <div class="form-group">
            <label >Nombre</label>
            <InputText class="form-control" @bind-Value="cliente.Nombre"></InputText>
            <ValidationMessage For="()=>cliente.Nombre" />
        </div>
        <div class="form-group">
            <label>Celular</label>
            <InputText class="form-control" @bind-Value="cliente.Celular"></InputText>
            <ValidationMessage For="()=>cliente.Celular" />
        </div>
        <div class="form-group">
            <label >Dirección</label>
            <InputText class="form-control" @bind-Value="cliente.Direccion"></InputText>
            <ValidationMessage For="()=>cliente.Direccion" />
        </div>
        <button type="submit" class="btn btn-dark">Guardar</button>
    
</EditForm>

@code {

    public Cliente cliente = new Cliente();

    public async Task Crear()
    {
        var httpResponse = await repositorio.Post("api/clientes", cliente);

        if (httpResponse.Error)
        {
            var body = httpResponse.HttpResponseMessage.Content.ReadAsStringAsync();
            Console.WriteLine(body);
        }
        else
        {
            navigationManager.NavigateTo("/");
        }
    }
}
